#!/bin/python3
version = "1.4.0"
print("+--------------------+")
print("Jizz version " + version)
print("+--------------------+")

import os

classes_exists = False
class_files = []

for i in os.listdir():
    if ".class" in i:
        classes_exists = True
        class_files.append(i)
if classes_exists:
    print("Some .class files have been found, would you like jizz to remove them?")
    a = input("[Y/n]").lower()
    if a == "y" or a != "n":
        os.system("rm " + " ".join(class_files))
        print("Class files removed...")

if os.path.exists("jizz/"):
    print("Legacy jizz directory found, migrating...")
    os.system("mkdir .jizz")
    os.system("cp jizz/config.jizz .jizz/")
    print("Removing legacy jizz directory...")
    os.system("rm -rf jizz/")

if not os.path.exists(".jizz/"):
    print("Generating jizz subdirectory...")
    os.system("mkdir .jizz")

if not os.path.exists(".jizz/config.jizz"):
    print("WARNING: No .jizz/config.jizz file found, generating example one & halting...")
    f = open(".jizz/config.jizz","w")
    f.write("// Auto-generated config file\n")
    f.write("class: project\n")
    f.write("version: 1.0\n")
    f.write("files: project other_project\n")
    f.close()
    exit()

f = open(".jizz/config.jizz","r")

buffer = []

for line in f:
    buffer.append(line.strip())
f.close()
jizz_class = "project"
jizz_version = "1.0"
jizz_files = ["project", "other_project"]
jizz_keep_classes = "false"

for i in buffer:
    if i.split()[0] == "class:":
        jizz_class = i.split()[1]
    elif i.split()[0] == "version:":
        jizz_version = i.split()[1]
    elif i.split()[0] == "files:":
        if len(i.split()) == 0:
            pass
        else:
            jizz_files = i.split()[1:]
    elif i.split()[0] == "keep-classes:":
        if i.split()[1] == "true":
            jizz_keep_classes = "true"
        elif i.split()[1] == "false":
            jizz_keep_classes = "false"
        else:
            pass


print("+--------------------+")
print("Variables:")
print("Class: " + jizz_class)
print("Version: " + jizz_version)
print("Files: " + " ".join(jizz_files))
print("Keep classes: " + jizz_keep_classes)
print("+--------------------+")

if os.path.exists(".jizz/man.txt"):
    os.remove(".jizz/man.txt")

print("Generating manifest using config.jizz parameters...")
f = open(".jizz/man.txt","w")
f.write("Manifest-Version: 1.0\n")
f.write("Specification-Version: " + jizz_version + "\n")
f.write("Main-Class: " + jizz_class + "\n")
f.write("Created-By: jizz(" + version + ")\n")
f.close()

print("Running compilation...")
os.system("javac " + ".java ".join(jizz_files) + ".java")
if not os.path.exists(jizz_class  + ".class"):
    print("Compilation check failed! Halting...")
    exit()

print("Converting class to jar...")

os.system("jar cmvf .jizz/man.txt " + jizz_class + ".jar " + ".class ".join(jizz_files) + ".class ")

print("Cleaning up...")
if jizz_keep_classes == "false":
    if os.path.exists(jizz_class + ".class"):
        os.system("rm " + ".class ".join(jizz_files) + ".class")
        print("Removing class files...")
else:
    print("Class files kept...")
print("Done!")
exit()
